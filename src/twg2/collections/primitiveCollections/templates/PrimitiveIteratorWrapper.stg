PrimitiveIteratorWrapper(var) ::= <<
package $var.packageName$;

/** A $var.type$ array {@link java.util.ListIterator\} that supports {@link #previous\} and {@link #set\}.
 * {@link #add\} and {@link #remove\} are not supported
 * @author TeamworkGuy2
 * @since 2015-1-17
 */
@javax.annotation.Generated("StringTemplate")
public class $var.className$ implements $var.implementClassNames:{x | $x$}; separator=", "$java.util.ListIterator<$var.objectType$> {
	private $var.iteratorName$ iter;


	/** Create an iterator over a set of indices
	 * @param iter the primitive iterator to iterate over
	 */
	public $var.className$($var.iteratorName$ iter) {
		this.iter = iter;
	\}


	@Override
	public boolean hasNext() {
		return iter.hasNext();
	\}


	@Override
	public $var.objectType$ next() {
		return iter.next();
	\}


	@Override
	public boolean hasPrevious() {
		return iter.hasPrevious();
	\}


	@Override
	public $var.objectType$ previous() {
		return iter.previous();
	\}


	@Override
	public int nextIndex() {
		return iter.nextIndex();
	\}


	@Override
	public int previousIndex() {
		return iter.previousIndex();
	\}


	@Override
	public void remove() {
		iter.remove();
	\}


	@Override
	public void set($var.objectType$ val) {
		iter.set(val);
	\}


	@Override
	public void add($var.objectType$ val) {
		iter.add(val);
	\}

\}

>>
